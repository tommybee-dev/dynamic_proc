#TARGET		= sample
TARGET		= dblib
MY_HOME     =.
ORACLE_HOME	=/C/DEV/COMP/OracleClient32
ROAD_HOME   =/C/DEV/skens/road_name/road_data_gen
CC			= gcc
EXE			= test
PROC		= proc
RM			= rm -rf
AR	    	= ar
ARFLAGS 	= rcv
COPY		= cp
ECHO		= echo
C_LIBS		= -L$(ORACLE_HOME) -loci12 -L$(ORACLE_HOME) -lorasql12

SHLD = ${CC} ${CFLAGS}
LDSHFLAGS = -Wall -shared -Wl,-Bsymbolic  -Wl,-rpath -Wl,$(ORACLE_HOME) -Wl,-rpath,$(ORACLE_HOME) $(C_LIBS)
LDFLAGS = -Wall -Wl,-rpath -Wl,$(ORACLE_HOME) -Wl,-rpath,$(ORACLE_HOME) $(C_LIBS)

# Set RANLIB to ranlib on systems that require it (Sun OS < 4, Mac OSX)
RANLIB  = ranlib
#RANLIB = true
                                     
PROCINC		=include=$(ORACLE_HOME)/precomp \
			include=$(ORACLE_HOME)/sdk/include \
			include=/mingw/i686-w64-mingw32/include \
			include=/mingw/i686-w64-mingw32/lib
			
#CFLAGS		= -D_DEBUG -D_REENTRANT  -c -g -r -w -O
#CFLAGS		= -D_DEBUG -D_REENTRANT -O2 -fPIC -Wall -ansi -pedantic
CFLAGS		= -D_DEBUG -D_REENTRANT -O2 -Wall -ansi -pedantic
CINCL		= -I. -I$(ORACLE_HOME)/sdk/include 
OBJ_OPT		= -D_CRON -D_DEBUG

ORA_OPT	= PARSE=PARTIAL RELEASE_CURSOR=YES MODE=ANSI CODE=ANSI_C
#ORA_OPT	= PARSE=FULL RELEASE_CURSOR=YES MODE=ANSI CODE=ANSI_C
#ORA_OPT	= PARSE=PARTIAL MODE=ANSI
OBJECTS		= dblib.o
ORA_GARBAGE	= *.dcl *.cod *.cud *.lis

SRCS = dblib.c

OBJS = $(SRCS:.c=.o)

default:	lib$(TARGET).a lib$(TARGET).so

lib$(TARGET).a:	$(OBJS)
	@($(AR) $(ARFLAGS) lib$(TARGET).a $(OBJS))
	@($(RANLIB) lib$(TARGET).a)
#	@(echo "@($(RANLIB) lib$(TARGET).a)")
#	@(echo "@($(AR) $(ARFLAGS) lib$(TARGET).a $(OBJS))")
	
lib$(TARGET).so: $(OBJS)
	@$(SHLD) $(LDSHFLAGS) -o $@ $(OBJS) $(LDFLAGS) \
		-Wl,-soname='basename $@'.0 


######## implicit rules
.SUFFIXES: .pc .c
#SUFFIXES = .o .c .h .a .so .sl
.pc.c:
	@$(ECHO) "@$(PROC) iname=$< $(PROCINC) $(ORA_OPT)"
	@$(PROC) iname=$< $(PROCINC) $(ORA_OPT)

COMPILE.c=$(CC) $(CFLAGS) -c
.c.o:
	@(echo "compiling $< ...")
	@($(COMPILE.c) -o $@ $<)

#.c.o:
#	@$(ECHO) "@$(CC)  $(CFLAGS) -c $< -o $@..c...compile"
#	@$(CC)  $(CFLAGS) $(CINCL) -c $< -o $@
	

mlib:
	@$(RM) $(ROAD_HOME)/lib/lib$(TARGET).a
	mv lib$(TARGET).a $(ROAD_HOME)/lib

clean:
	@$(RM) $(OBJS) $(ORA_GARBAGE) lib$(TARGET).a lib$(TARGET).so